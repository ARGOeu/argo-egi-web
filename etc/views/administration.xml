<config
        xmlns="http://software.in2p3.fr/lavoisier/config.xsd"
        xmlns:date="http://exslt.org/dates-and-times"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:str="http://exslt.org/strings"
        xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">


<view name="saml-metadata">
    <info>
        <description>SAML metadata</description>
        <category>ADMIN</category>
    </info>
    <connector type="FileConnector">
        <parameter name="path" >security/saml-metadata-argo.xml</parameter>
    </connector>

    <renderers>
        <renderer type="DefaultRenderer">
            <parameter name="contentType">text/xml</parameter>
        </renderer>
    </renderers>
</view>


    <view name="listParameters">
        <info>
            <description>list of parameters used for the forms, interfaces ...</description>
            <category>ADMIN</category>
        </info>
        <argument name="mode">light</argument>
        <connector type="XMLConnector">
            <!--<parameter name="content" eval="view('listProfilesRaw')"/>-->
            <parameter name="content" eval="new_element('root')"></parameter>
        </connector>
        <processors>
            <insert match="/root" nodes="new_element('ngis')"/>
            <insert match="/root" nodes="new_element('sites')"/>
            <insert match="/root" nodes="new_element('hosts')"/>


            <insert match="/root/ngis" nodes="view('listNgi')"/>
            <insert match="/root/sites" nodes="view('listSite')"/>
            <insert match="/root/hosts" nodes="view('goc.HostList')"/>


            <replace match="/root/ngis/e:entries/e:entry/text()" nodes="concat(',',.)"/>
            <replace match="/root/sites/e:entries/e:entry/text()" nodes="concat(',',.)"/>
            <replace match="/root/hosts/e:entries/e:entry/text()" nodes="concat(',',.)"/>



            <remove match="/root/ngis/e:entries" depth="2"/>
            <remove match="/root/sites/e:entries" depth="2"/>
            <remove match="/root/hosts/e:entries" depth="2"/>
            <remove match="/root/sf/e:entries" depth="2"/>
        </processors>
    </view>

    <view name="TermsofUse">
        <info>
            <description>EGI terms of use</description>
            <category>WEBUI</category>
        </info>
        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"></parameter>
        </connector>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/ToU.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/ToU.html</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="recomputation" authenticators="AuthenticatedUsers">
        <info>
            <description>Recomputation interface</description>
            <category>ADMIN</category>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('listParameters')"></parameter>
        </connector>

        <processors>
            <insert match="/root"
                    nodes="
                    new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                    |new_attribute('user',user())
                    |new_attribute('WebmasterEmail',property('contact.email'))
                    |new_attribute('url',concat(property('server.baseUrl'),':',property('lavoisier.http.port'),'/lavoisier/form_recomputation_results?recompId='))
                    ">
            </insert>
            <insert match="/root" nodes="view('listSitesbyNgi')"/>

        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomputation.html</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="administratorsList" authenticators="AuthenticatedUsers">
        <info>
            <description>List of admin static</description>
            <category>ADMIN</category>
        </info>
        <connector type="FileConnector">
            <parameter name="path">/xml/administrators.xml</parameter>
        </connector>



        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/admin.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/admin.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="post_profile" authenticators="AuthenticatedUsers">


        <info>
            <description>list of parameters treated from the profile form</description>
            <category>Hidden</category>
        </info>


        <connector type="XMLConnector">
            <parameter name="content" eval="view_post('format_post', post())/e:entries"/>
        </connector>

        <renderers>
            <renderer type="JSONRenderer">
                <parameter name="text_as_pair">false</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="format_post">
        <info>
            <description>list of parameters posted from the profile form</description>
            <category>Hidden</category>
        </info>
        <connector type="XMLConnector">
            <parameter name="content" eval="post()"/>
        </connector>
        <processors>


        </processors>
    </view>


    <view name="RecomputationList" authenticators="AuthenticatedUsers">
        <info>
            <category>ADMIN</category>
            <description>List of recomputation</description>
        </info>

        <argument name="key">_key_</argument>
        <argument name="details">false</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('form_recomputation_results',entry('mode','RW')|entry('key',$key))"></parameter>
        </connector>

        <processors>
            <element>
                <attribute-create out="user">user()</attribute-create>
                <attribute-create out="admin">boolean(view('administratorsList')/admins/admin/CertDN[text()=user()])</attribute-create>
                <attribute-create out="details">$details</attribute-create>
            </element>
        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomputationList.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomputationList.html</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="form_recomputation_results"  xmlns:date="http://exslt.org/dates-and-times">
        <info>
            <category>ADMIN</category>
        </info>


        <argument name="recompId">_recompId_</argument>
        <argument name="key" eval="choose($recompId!='_recompId_',$recompId,'_key_')"/>
        <argument name="mode">RW</argument>
        <argument name="admin">_admin_</argument>


        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view_post('recomputation_RotatingCacheContent',choose(post(false()),post(false()),entries()))"/>
            <parameter name="key" eval="choose($key!='_key_'  ,$key,null())"/>
            <parameter name="size">100</parameter>
            <parameter name="mode" eval="$mode"></parameter>
        </connector>




        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomputationList.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomputationList.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="recomputation_RotatingCacheContent">
        <info>
            <category>ADMIN</category>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="post()"></parameter>
        </connector>

        <processors>


            <element  if="not(EmailSent)">
                <element-create>view('recomputation_SendEmail',entry('id',../e:entry[@key='recompId']/text())|entry('url',../e:entry[@key='url']/text())|entry('cc',../e:entry[@key='email']/text()))</element-create>
            </element>

        </processors>

    </view>

    <view name="recomputation_SendEmail">
    <info>
        <category>ADMIN</category>
    </info>

        <argument name="id"></argument>
        <argument name="url"></argument>
        <argument name="cc"></argument>

        <connector type="ShellConnector">
            <parameter name="executable">/bin/sh</parameter>
            <parameter name="arguments">
                <entry>../../etc/shell/SendEmail.sh</entry>
                <entry eval="property('contact.email')"></entry>
                <entry eval="$id"></entry>
                <entry eval="$url"></entry>
                <entry eval="$cc"></entry>
                <entry eval="property('contact.recomputation')"></entry>
            </parameter>
            <parameter name="workdir" eval="property('user.dir')"/>
        </connector>

    </view>

    <view name="cleanCaches">
        <info>
            <category>ADMIN</category>
        </info>
        <connector type="ShellConnector">
            <parameter name="executable">/bin/rm</parameter>
            <parameter name="arguments">
                <entry>-Rf</entry>
                <entry>api.*</entry>
            </parameter>
            <parameter name="workdir" eval="property('cache.baseDirectory')"/>
        </connector>

        <cache type="EmptyCache">
            <trigger type="FixedTimeTrigger">
                <parameter name="hour">2</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>
    </view>


    <view name="form_recomputation_results_c">
        <info>
            <category>ADMIN</category>
        </info>



        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('root')"></parameter>
        </connector>

        <processors>


            <element in="root">
                <element-create>view('form_recomputation_results',post()|entry('mode','W'))</element-create>
            </element>
        </processors>


    </view>

    <!--<view name="form_recomputation_results_INTERNAL" >-->
        <!--<info>-->
            <!--<category>ADMIN</category>-->
        <!--</info>-->



        <!--<connector type="HTTPConnector">-->
            <!--<parameter name="method">POST</parameter>-->
            <!--<parameter name="url">https://operations-portal.egi.eu/cron/sendEmail</parameter>-->
            <!--<parameter name="post" eval="post()"></parameter>-->
            <!--<parameter name="certificate" eval="property('certificate.path')"/>-->
            <!--<parameter name="passphrase" eval="property('certificate.password')"/>-->
            <!--<parameter name="force-redirect">true</parameter>-->
        <!--</connector>-->



        <!--<processors>-->

            <!--<element in="SendEmail">-->
                <!--<element in="entries">-->
                    <!--<element-create>post()</element-create>-->
                <!--</element>-->
            <!--</element>-->


        <!--</processors>-->


    <!--</view>-->



    <view name="form_profile_results_INTERNAL" xmlns:str="http://exslt.org/strings"
          xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
        <info>
            <category>ADMIN</category>
            <description>Build your AR data</description>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view_post('format_post', post()) "/>

            <!--<parameter name="url">https://operations-portal.egi.eu/cron/sendEmail</parameter>-->
            <!--<parameter name="certificate" eval="property('certificate.path')"/>-->
            <!--<parameter name="passphrase" eval="property('certificate.password')"/>-->
        </connector>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profile_res.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profile_res.html</parameter>
            </renderer>
        </renderers>

    </view>



    <view name="modify_recomputation_results">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('form_recomputation_result',entry('key',$key)|entry('mode','W'))"></parameter>
        </connector>

    </view>

    <view name="modify_recomputation_results_cache">
        <info>
            <category>ADMIN</category>
        </info>



        <argument name="key"></argument>
        <argument name="param"></argument>
        <argument name="param_value"></argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('form_recomputation_result',entry('key',$key)|entry('mode','R'))"></parameter>
        </connector>


        <processors>
            <element in="properties">
                <elements path="entry/SendEmail/entries/e:entries/e:entry[@key=$param]">
                    <text-ignore></text-ignore>
                    <text-create>$param_value</text-create>
                </elements>
            </element>
        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomputationList.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomputationList.html</parameter>
            </renderer>
        </renderers>

    </view>



    <view xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" name="listProfiles"
          authenticators="AuthenticatedUsers">
        <info>
            <description>List of Profile html</description>
            <category>Profile</category>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('aggregation_profiles')"></parameter>
        </connector>

        <processors>
            <insert match="/object"
                    nodes="new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                     |new_attribute('user',user())">
            </insert>
        </processors>




        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profiles.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profiles.html</parameter>
            </renderer>
        </renderers>


    </view>
    <view xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" name="CreationProfiles"
          authenticators="AuthenticatedUsers">
        <info>
            <description>creation of Profile</description>
            <category>ADMIN</category>
        </info>

        <argument name="metricsProfileId">0</argument>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('metricsProfile')"></parameter>
        </connector>

        <processors>
            <insert match="/object"
                    nodes="new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                     |new_attribute('user',user()) | new_attribute('metricsProfileId',$metricsProfileId)">
            </insert>
            <!--<element in="results">-->
            <!--<element-create>view('metricsProfile')</element-create>-->
            <!--</element>-->
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" name="updateProfile"
          authenticators="AuthenticatedUsers">
        <info>
            <description>creation of Profile</description>
            <category>ADMIN</category>
        </info>

        <argument name="profileId"></argument>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('metricsProfile')"></parameter>
        </connector>


        <processors>
            <insert match="/object"
                    nodes="new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                     |new_attribute('user',user())">
            </insert>

            <element in="object">
                <attribute-create out="mode">'edition'</attribute-create>
                <element-create>view('aggregation_profiles')/object/data/item/object[@id=$profileId]</element-create>
            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
        </renderers>

    </view>




    <view name="profileDeletion">
        <info>
            <category>ADMIN</category>
            <description>Delete a profile</description>
        </info>
        <argument name="profileId"></argument>
        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('api.aggregation_profiles'),'/',$profileId)"></parameter>
            <parameter name="method">DELETE</parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="force-redirect">true</parameter>

            <parameter name="header">
                <entry key="x-api-key" eval="property('argo.api.key')"></entry>
                <entry key="Accept">application/json</entry>
            </parameter>
        </connector>

        <serializer type="JSONStreamSerializer"></serializer>

        <processors>
            <element>
                <element-create>view('triggerProfileList')/null</element-create>
            </element>
        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="profileUpdate">
        <info>
            <category>ADMIN</category>
            <description>Delete a profile</description>
        </info>
        <argument name="id"></argument>
        <argument name="json"></argument>


        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('api.aggregation_profiles'),'/',$id)"></parameter>
            <parameter name="method">PUT</parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="post" eval="$json"></parameter>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="property('argo.api.key')"></entry>
                <entry key="Content-Type">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"></serializer>
        <processors>
            <element>
                <element-create>view('triggerProfileList')/null</element-create>
            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="profileAddition">
        <info>
            <category>ADMIN</category>
            <description>Delete a profile</description>
        </info>
        <argument name="json"></argument>


        <connector type="HTTPConnector">
            <parameter name="url" eval="property('api.aggregation_profiles')"></parameter>
            <parameter name="method">POST</parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="post" eval="$json"></parameter>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="property('argo.api.key')"></entry>
                <entry key="Content-Type">application/json</entry>
            </parameter>
        </connector>
        <serializer type="JSONStreamSerializer"></serializer>
        <processors>
            <element>
                <element-create>view('triggerProfileList')/null</element-create>
            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="testJson">
        <connector type="FileConnector">
            <parameter name="path">test.json</parameter>
        </connector>

        <serializer type="JSONStreamSerializer"></serializer>
    </view>

    <view name="testJson2">
        <connector type="FileConnector">
            <parameter name="path">test2.json</parameter>
        </connector>

        <serializer type="JSONStreamSerializer"></serializer>
    </view>

</config>