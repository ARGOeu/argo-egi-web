<config xmlns="http://software.in2p3.fr/lavoisier/config.xsd"
        xmlns:date="http://exslt.org/dates-and-times"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:str="http://exslt.org/strings"
        xmlns:math="http://exslt.org/math"
        xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">




    <view name="choiceNgi">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('listNgi')"></parameter>
        </connector>

        <processors>
            <element in="e:entries">
                <attribute-create out="entity">'ngi'</attribute-create>
            </element>
        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/interface_status.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/interface_status.html</parameter>

            </renderer>
        </renderers>

    </view>

    <view name="choiceSite">
        <connector type="XMLConnector">
            <parameter name="content" eval="view('listSitesbyNgi')"></parameter>
        </connector>

        <processors>
            <element in="results" out="e:entries">
                <element-ignore in="Ngi">
                    <element in="SITE" out="e:entry">
                        <attribute-ignore></attribute-ignore>
                        <attribute-create out="ngi">current()/../parent::Ngi/@key</attribute-create>
                        <text-create>new_text(current()/../@NAME)</text-create>


                    </element>
                </element-ignore>
            </element>



            <element in="e:entries">
                <attribute-create out="entity">'site'</attribute-create>
            </element>
        </processors>

        <pre-renderers>
            <row foreach="e:entries/e:entry">
                <column>@ngi</column>
                <column>text()</column>
            </row>
        </pre-renderers>
        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/interface_status.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/interface_status.html</parameter>

            </renderer>
        </renderers>

    </view>




    <view name="StateMap">
        <info>
            <category>Status</category>
            <description>Status List</description>
        </info>

        <connector type="XMLConnector">
            <parameter name="content">
                <entry key="OK">0</entry>
                <entry key="WARNING">1</entry>
                <entry key="UNKNOWN">2</entry>
                <entry key="MISSING">3</entry>
                <entry key="CRITICAL">4</entry>
            </parameter>

        </connector>
    </view>

    <view name="StateColor">
        <info>
            <category>Status</category>
            <description>Status List</description>
        </info>

        <connector type="XMLConnector">
            <parameter name="content">
                <entry key="OK">green</entry>
                <entry key="WARNING">orange</entry>
                <entry key="UNKNOWN">lightgrey</entry>
                <entry key="MISSING">#53424a</entry>
                <entry key="CRITICAL">red</entry>
            </parameter>

        </connector>
    </view>



    <view name="status_form">
        <info>
            <category>Display</category>
            <description>Form : customized report</description>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('listParameters',entry('mode','full'))"></parameter>
        </connector>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_form_reports.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_form_reports.html</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="listKeys">
        <info>
            <category>Internal View</category>
            <description>Retrieve the keys of a rotating cache</description>
        </info>

        <argument name="view">status_data_cached</argument>

        <connector type="XMLConnector">
            <parameter name="content" eval="document(concat(property('cache.baseDirectory'), '/',$view,'/', '_index.properties'))"/>
        </connector>

        <processors>
            <element in="properties">
                <attribute-create out="max" >/properties/entry[text()=math:max(/properties/entry/text())]/@key</attribute-create>
                <attribute-create out="min" >/properties/entry[text()=math:min(/properties/entry/text())]/@key</attribute-create>
                <element-ignore in="comment"></element-ignore>


            </element>
        </processors>

    </view>

    <view name="status_data_cached">

        <info>
            <category>API results</category>
            <description>Site API results cached </description>
        </info>


        <argument name="diff">1</argument>
        <argument name="start_date" eval="concat(substring(date:add(date:date-time(),concat('-P',$diff,'D')), 0,11),'T00:00:00Z')"></argument>
        <argument name="end_date" eval="concat(substring(date:add(date:date-time(),concat('-P',$diff,'D')), 0,11),'T23:59:59Z')"></argument>



        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view('Site_Statuses_NGI_noCache', entry('start_time',$start_date)|entry('end_time',$end_date))"/>
            <parameter name="key" eval="$start_date"/>
            <parameter name="size">100000</parameter>

        </connector>


    </view>

    <view name="status_data_cached_cloud">

        <info>
            <category>API results</category>
            <description>Site API results cached </description>
        </info>


        <argument name="diff">1</argument>
        <argument name="start_date" eval="concat(substring(date:add(date:date-time(),concat('-P',$diff,'D')), 0,11),'T00:00:00Z')"></argument>
        <argument name="end_date" eval="concat(substring(date:add(date:date-time(),concat('-P',$diff,'D')), 0,11),'T23:59:59Z')"></argument>



        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view('Site_Statuses_NGI_noCache', entry('start_time',$start_date)|entry('end_time',$end_date)|entry('profile','ch.cern.sam.CLOUD-MON'))"/>
            <parameter name="key" eval="$start_date"/>
            <parameter name="size">100000</parameter>

        </connector>


    </view>

    <!--<view name="trigger_status_data_cached">-->
        <!--<connector type="XMLConnector">-->
            <!--<parameter name="content" eval="view('status_data_cached')"></parameter>-->
        <!--</connector>-->

        <!--<cache type="EmptyCache">-->
            <!--<trigger type="FixedTimeTrigger">-->
                <!--<parameter name="hour">3</parameter>-->
            <!--</trigger>-->
            <!--<trigger type="ViewNotifiedTrigger"></trigger>-->
        <!--</cache>-->

    <!--</view>-->

    <!--<view name="trigger_status_data_cached_cloud">-->
        <!--<connector type="XMLConnector">-->
            <!--<parameter name="content" eval="view('status_data_cached_cloud')"></parameter>-->
        <!--</connector>-->

        <!--<cache type="EmptyCache">-->
            <!--<trigger type="FixedTimeTrigger">-->
                <!--<parameter name="hour">3</parameter>-->
                <!--<parameter name="minute">20</parameter>-->
            <!--</trigger>-->
            <!--<trigger type="ViewNotifiedTrigger"></trigger>-->
        <!--</cache>-->

    <!--</view>-->

    <view name="data_status_report">
        <info>
            <category>API results</category>
            <description>Access to Site API results cached  </description>
        </info>

        <argument name="start_time_timestamp" eval="date:seconds('2015-01-05T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-06T00:00:00')"></argument>

        <!--<argument name="sf">CREAM-CE</argument>-->

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_data_cached',entry('start_date','')|entry('end_date',''))"></parameter>
        </connector>



        <processors>
            <element in="properties" out="root">

                <element-ignore in="entry">

                <element in="root" if="date:seconds(substring(entry/root/@start_time,0,20)) &gt;= $start_time_timestamp and date:seconds(substring(entry/root/@start_time,0,20))">

                </element>

                </element-ignore>
            </element>

            <element in="root">
                <element-ignore in="root">
                    <element in="entry">
                        <text-ignore></text-ignore>
                        <elements-ignore path="root/profile/group">
                            <elements path="group/group/group/host/metric">
                                <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            </elements>
                        </elements-ignore>

                    </element>

                </element-ignore>
            </element>
            <element in="root">
                <element-ignore in="entry" if="not(group/group)"></element-ignore>
            </element>

        </processors>
    </view>


    <view name="data_status_report_cloud">
        <info>
            <category>API results</category>
            <description>Access to Site API results cached  </description>
        </info>

        <argument name="start_time_timestamp" eval="date:seconds('2015-01-05T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-06T00:00:00')"></argument>

        <!--<argument name="sf">CREAM-CE</argument>-->

        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_data_cached_cloud',entry('start_date','')|entry('end_date',''))"></parameter>
        </connector>



        <processors>
            <element in="properties" out="root">

                <element-ignore in="entry">

                    <element in="root" if="date:seconds(substring(entry/root/@start_time,0,20)) &gt;= $start_time_timestamp and date:seconds(substring(entry/root/@start_time,0,20))">

                    </element>

                </element-ignore>
            </element>

            <element in="root">
                <element-ignore in="root">
                    <element in="entry">
                        <text-ignore></text-ignore>
                        <elements-ignore path="root/profile/group">
                            <elements path="group/group/group/host/metric">
                                <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            </elements>
                        </elements-ignore>

                    </element>

                </element-ignore>
            </element>
            <element in="root">
                <element-ignore in="entry" if="not(group/group)"></element-ignore>
            </element>

        </processors>
    </view>


    <view name="statusperNgi">
        <info>
            <category>Status</category>
            <description>Status Raw Data per NGI</description>
        </info>
        <argument name="ngi">NGI_FRANCE</argument>


        <argument name="start_time"></argument>
        <argument name="end_time"></argument>
        <argument name="profile">ch.cern.sam.ROC_CRITICAL</argument>
        <!--ch.cern.sam.CLOUD-MON-->

        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('api.status.url'),'/',$ngi,'?profile=',$profile,'&amp;group_type=ngi&amp;start_time=',$start_time,'&amp;end_time=',$end_time)"></parameter>
            <fallback>
                <exception type="java.net.SocketException"/>
            </fallback>
        </connector>

        <processors>
            <element in="root">

                <attribute-create out="start_time">$start_time</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>
                <attribute-create out="ngi">$ngi</attribute-create>
                <attribute-create out="timestamp_start">date:seconds(substring($start_time,0,20))</attribute-create>



            </element>

        </processors>


    </view>

    <view name="Site_Statuses_NGI_noCache">
    <info>
        <category>Status</category>
        <description>Status Raw Data</description>
    </info>

    <argument name="start_time" eval="concat(substring(date:date(),0,11),'T00:00:00Z')"></argument>
    <argument name="end_time" eval="concat(substring(date:date-time(),0,20),'Z')"></argument>

        <argument name="profile">ch.cern.sam.ROC_CRITICAL</argument>

    <connector type="XMLConnector">
        <parameter name="content" eval="view('listNgi')"></parameter>

    </connector>


    <processors>
        <element in="e:entries" out="root">

            <element in="e:entry">
                <element-create>view('statusperNgi',entry('ngi',current()/../text())|entry('start_time',$start_time)|entry('end_time',$end_time)|entry('profile',$profile))</element-create>
            </element>

        </element>
    </processors>
    </view>

    <view name="Site_Statuses_NGI">
        <info>
            <category>Status</category>
            <description>Status Raw Data</description>
        </info>

       <argument name="start_time" eval="concat(substring(date:date(),0,11),'T00:00:00Z')"></argument>
        <argument name="end_time" eval="concat(substring(date:date-time(),0,20),'Z')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('listNgi')"></parameter>
        </connector>


        <processors>
            <element in="e:entries" out="root">

                <element in="e:entry">
                    <element-create>view('statusperNgi',entry('ngi',current()/../text())|entry('start_time',$start_time)|entry('end_time',$end_time))</element-create>
                     <text-ignore></text-ignore>

                </element>

            </element>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="xpath" eval="path(false())"/>
            <parameter name="index_depth">3</parameter>

            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">20</parameter>
            </trigger>


        </cache>
    </view>


    <view name="Site_Statuses_NGI_Cloud">
        <info>
            <category>Status</category>
            <description>Status Raw Data</description>
        </info>

        <argument name="start_time" eval="concat(substring(date:date(),0,11),'T00:00:00Z')"></argument>
        <argument name="end_time" eval="concat(substring(date:date-time(),0,20),'Z')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('listNgi')"></parameter>
        </connector>


        <processors>
            <element in="e:entries" out="root">

                <element in="e:entry">
                    <element-create>view('statusperNgi',entry('ngi',current()/../text())|entry('start_time',$start_time)|entry('end_time',$end_time)|entry('profile','ch.cern.sam.CLOUD-MON'))</element-create>
                    <text-ignore></text-ignore>
                </element>

            </element>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="xpath" eval="path(false())"/>
            <parameter name="index_depth">3</parameter>

            <trigger type="ViewNotifiedTrigger"/>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">1</parameter>
            </trigger>


        </cache>
    </view>




    <view name="missing_metrics_view">

        <argument name="ngi">false</argument>
        <argument name="site">false</argument>
        <argument name="host">false</argument>
        <argument name="sf">false</argument>
        <argument name="report">false</argument>
        <argument name="view">Site_Statuses_NGI</argument>
        <argument name="start_time_timestamp" eval="date:seconds('2014-12-30T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-06T00:00:00')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="choose($report='false',view('Site_Statuses_NGI'),choose($report='cloud',view('Site_Statuses_NGI_Cloud'),view($view,arguments())))"></parameter>
        </connector>
        <processors>
            <element in="root">
                <element-ignore in="entry">
                    <element-ignore in="root" >

                        <element-ignore in="profile">
                            <element-ignore in="group"><!--   vo   -->
                                <element-ignore in="group" ><!--   ngi   -->
                                    <element-ignore in="group" ><!--  site    -->
                                        <element-ignore in="group"><!--  sf    -->
                                            <element in="host" out="group"
                                                     if="../../../@name=$ngi
                                                     and  (../../@name=$site or $site='false')
                                                     and ( ../@name=$sf or $sf='false' )
                                                     and (@name=$host or $host='false')">

                                                <element-ignore in="metric">

                                                    <element in="status">
                                                        <attribute-create out="metric">ancestor::metric/@name
                                                        </attribute-create>
                                                        <attribute-create out="host">ancestor::host/@name
                                                        </attribute-create>
                                                        <attribute-create out="sf">
                                                            ancestor::group[@type='service_type']/@name
                                                        </attribute-create>
                                                        <attribute-create out="site">
                                                            ancestor::group[@type='site']/@name
                                                        </attribute-create>
                                                        <attribute-create out="type">'missing'</attribute-create>
                                                        <attribute-create out="id">concat(ancestor::group[@type='site']/@name,'-',ancestor::metric/@name,'-',ancestor::group[@type='service_type']/@name,'-',ancestor::host/@name)</attribute-create>
                                                    </element>
                                                </element-ignore>
                                            </element>
                                        </element-ignore>
                                    </element-ignore>
                                </element-ignore>
                            </element-ignore>
                        </element-ignore>
                    </element-ignore>
                </element-ignore>

            </element>

            <elements path="root/group">
                <element-ignore in="status" if="@id=preceding-sibling::status/@id"/>
            </elements>
            <elements path="root/group">
                <element in="status" out="missing"></element>
            </elements>

        </processors>
    </view>







    <view name="site_status" xmlns:math="http://exslt.org/math">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi">all</argument>
        <argument name="site">false</argument>

        <argument name="report">false</argument>
        <argument name="start_time_timestamp" eval="date:seconds('2014-12-30T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-06T00:00:00')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="choose($report='false',view('Site_Statuses_NGI'),choose($report='cloud',view('Site_Statuses_NGI_Cloud'),view('data_status_report_lastweek',arguments())))"></parameter>
        </connector>

        <processors>

            <element in="root" >
                <element-ignore in="entry">
                    <element-ignore in="root">

                            <element-ignore in="profile">
                                    <element-ignore in="group">
                                            <element in="group"   if="@name=$ngi or $report='cloud'" attributes="current()/parent::group/parent::profile/parent::root/@*">
                                                <element in="group" if="@name=$site or $site='false'">
                                                    <element-ignore in="group">
                                                        <element-ignore in="host">

                                                                <element-ignore in="metric">
                                                                    <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                                                                    <element in="status">
                                                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>
                                                                        <attribute-create out="id">concat(ancestor::metric/@name,'-',ancestor::group[@type='service_type']/@name,'-',ancestor::host/@name)</attribute-create>
                                                                    </element>
                                                                </element-ignore>

                                                        </element-ignore>
                                                    </element-ignore>
                                                </element>
                                                <element-ignore></element-ignore>
                                            </element>
                                    </element-ignore>
                            </element-ignore>
                    </element-ignore>
                </element-ignore>

            </element>




            <!-- create sorted of timestamps -->

            <elements path="root/group/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>


            <elements path="root/group/group">
                <element-create-as-parent out="group_ts" group-by="@timestamp">
                    <element in="status"/>
                </element-create-as-parent>
            </elements>


            <!--
            Put placeholders where we have some holes
            -->
            <element in="root">
                <set variable="missing_metrics">view('missing_metrics_view',entry('report',$report)|entry('ngi',$ngi))</set>
                <elements path="group/group/group_ts">
                    <element-create>
                        $missing_metrics/root/group
                        /missing[@site=current()/../status/@site  and  ( not(@metric=current()/../status/@metric  and @host=current()/../status/@host and @sf=current()/../status/@sf))]
                    </element-create>

                </elements>
            </element>

            <!--
            Replace placeholder with the first preceding timestamp
            -->

            <element in="root">
                <elements path="group/group/group_ts">
                    <element-ignore in="missing" >
                            <element-create>
                                (parent::missing/parent::group_ts/preceding-sibling::group_ts/status[@site=current()/../@site and @host=current()/../@host and @metric=current()/../@metric])[last()]
                            </element-create>
                    </element-ignore>
                </elements>
            </element>




            <!-- replace status with a value in order to use maximum function -->

            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group/group_ts/status">
                    <attribute-create out="value">$StateMap/e:entries/e:entry[@key=current()/../@status]/text()</attribute-create>
                </elements>
            </element>

            <elements path="root/group/group/group_ts">
                <attribute-create out="value">math:max(../status/@value)</attribute-create>
            </elements>

            <elements path="root/group/group/group_ts">
                <attribute-create out="timestamp">../status[1]/@timestamp</attribute-create>
                <element in="status">
                    <attribute-ignore in="timestamp"/>
                </element>
            </elements>



            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group">
                    <element in="group_ts" if="following-sibling::group_ts[1]/@timestamp">
                        <attribute-create out="endtime">parent::group_ts/following-sibling::group_ts[1]/@timestamp</attribute-create>
                        <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                        <element-ignore in="status"></element-ignore>

                    </element>
                    <element in="group_ts">
                        <attribute-create out="endtime">current()/../parent::group/parent::group/@end_time</attribute-create>

                        <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                        <element-ignore in="status"></element-ignore>

                    </element>
                </elements>
            </element>

            <!-- remove useles previous entries -->
            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@endtime,0,20)) &gt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20)) ">
                </element>
                <element-ignore in="group_ts"></element-ignore>
            </elements>

            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@timestamp,0,20)) &lt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20))">
                    <attribute in="timestamp">parent::group_ts/parent::group/parent::group/@start_time</attribute>
                </element>
            </elements>

            <!-- add color attribute -->
            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <elements path="group/group">
                    <element in="group_ts" out="group_ts">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute in="name">parent::group_ts/parent::group/@name</attribute>
                    </element>

                </elements>
            </element>

            <element in="root">

                <element in="group">
                    <attribute-create out="view">'sf_status'</attribute-create>
                    <attribute-create out="entity">concat('report=',$report,'&amp;ngi=',$ngi,'&amp;site')</attribute-create>
                </element>
            </element>





        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html</parameter>

            </renderer>
        </renderers>
    </view>







    <view name="sf_status" xmlns:math="http://exslt.org/math">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi"></argument>
        <argument name="site"></argument>

        <argument name="report">false</argument>
        <argument name="start_time_timestamp" eval="date:seconds('2014-12-30T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-03T00:00:00')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="choose($report='false',view('Site_Statuses_NGI'),choose($report='cloud',view('Site_Statuses_NGI_Cloud'),view('data_status_report',arguments())))"></parameter>
        </connector>

        <processors>

            <element in="root" >

                <element-ignore in="entry">
                    <element-ignore in="root">
                          <element-ignore in="profile">
                            <element-ignore in="group">
                                <element-ignore in="group"  >
                                    <element in="group" if="@name=$site" attributes="current()/parent::group/parent::group/parent::profile/parent::root/@*" >
                                        <element in="group">
                                            <element-ignore in="host">

                                                <element-ignore in="metric">
                                                    <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                                                    <element in="status">
                                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>

                                                    </element>
                                                </element-ignore>

                                            </element-ignore>
                                        </element>
                                    </element>
                                </element-ignore>
                            </element-ignore>
                        </element-ignore>
                    </element-ignore>
                </element-ignore>

            </element>






            <elements path="root/group/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>


            <elements path="root/group/group">
                <element-create-as-parent out="group_ts" group-by="@timestamp">
                    <element in="status"/>
                </element-create-as-parent>
            </elements>





            <!--
           Put placeholders where we have some holes
           -->
            <element in="root">
                <set variable="missing_metrics">view('missing_metrics_view',entry('report',$report)|entry('ngi',$ngi)|entry('site',$site))</set>
                <elements path="group/group/group_ts">
                    <element-create>
                        $missing_metrics/root/group
                        /missing[@sf=current()/../status/@sf    and ( not(@metric=current()/../status/@metric  and @host=current()/../status/@host))]
                    </element-create>

                </elements>
            </element>

            <!--
            Replace placeholder with the first preceding timestamp
            -->


            <element in="root">
                <elements path="group/group/group_ts">
                    <element-ignore in="missing">
                        <element-create>
                            (parent::missing/parent::group_ts/preceding-sibling::group_ts/status[@site=current()/../@site and @host=current()/../@host and @metric=current()/../@metric])[last()]
                        </element-create>
                    </element-ignore>
                </elements>
            </element>

            <!-- replace status with a value in order to use maximum function -->



            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group/group_ts/status">
                    <attribute-create out="value">$StateMap/e:entries/e:entry[@key=current()/../@status]/text()</attribute-create>
                </elements>
            </element>

            <elements path="root/group/group/group_ts">
                <attribute-create out="value">math:max(../status/@value)</attribute-create>
            </elements>

            <elements path="root/group/group/group_ts">
                <attribute-create out="timestamp">../status[1]/@timestamp</attribute-create>
                <element in="status">
                    <attribute-ignore in="timestamp"/>
                </element>
            </elements>



            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group">
                    <element in="group_ts" if="following-sibling::group_ts[1]/@timestamp">
                        <attribute-create out="endtime">parent::group_ts/following-sibling::group_ts[1]/@timestamp</attribute-create>
                        <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                        <element-ignore in="status"></element-ignore>

                    </element>
                    <element in="group_ts">
                        <attribute-create out="endtime">current()/../parent::group/parent::group/@end_time</attribute-create>

                        <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                        <element-ignore in="status"></element-ignore>

                    </element>
                </elements>
            </element>

            <!-- remove useles previous entries -->
            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@endtime,0,20)) &gt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20)) ">
                </element>
                <element-ignore in="group_ts"></element-ignore>
            </elements>

            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@timestamp,0,20)) &lt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20))">
                    <attribute in="timestamp">parent::group_ts/parent::group/parent::group/@start_time</attribute>
                </element>
            </elements>



            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <elements path="group/group">
                    <element in="group_ts" out="group_ts">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute in="name">../ancestor::group/@name</attribute>
                    </element>

                </elements>
            </element>

            <element in="root">
                <element in="group">
                    <attribute-create out="site">$site</attribute-create>
                    <attribute-create out="view">'host_status'</attribute-create>
                    <attribute-create out="entity">concat('report=',$report,'&amp;ngi=',$ngi,'&amp;site=',$site,'&amp;sf')</attribute-create>
                </element>
            </element>






        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html</parameter>

            </renderer>
        </renderers>

    </view>


    <view name="host_status" xmlns:math="http://exslt.org/math">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi"></argument>
        <argument name="site"></argument>
        <argument name="sf"></argument>

        <argument name="report">false</argument>
        <argument name="start_time_timestamp" eval="date:seconds('2014-12-30T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-03T00:00:00')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="choose($report='false',view('Site_Statuses_NGI'),choose($report='cloud',view('Site_Statuses_NGI_Cloud'),view('data_status_report',arguments())))"></parameter>
        </connector>

        <processors>

            <element in="root" >

                <element-ignore in="entry">
                    <element-ignore in="root">

                        <element-ignore in="profile">
                            <element-ignore in="group">
                                <element-ignore in="group"  >
                                    <element-ignore in="group" >
                                        <element in="group" if="@name=$sf and current()/parent::group/@name=$site" attributes="current()/parent::group/parent::group/parent::group/parent::profile/parent::root/@*">
                                            <element in="host" out="group">

                                                <element-ignore in="metric">
                                                    <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                                                    <element in="status">
                                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>

                                                    </element>
                                                </element-ignore>

                                            </element>

                                        </element>
                                        <element-ignore/>
                                    </element-ignore>
                                </element-ignore>
                            </element-ignore>
                        </element-ignore>
                    </element-ignore>
                </element-ignore>

            </element>







            <elements path="root/group/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>


            <elements path="root/group/group">
                <element-create-as-parent out="group_ts" group-by="@timestamp">
                    <element in="status"/>
                </element-create-as-parent>
            </elements>





            <!--
          Put placeholders where we have some holes
          -->
            <element in="root">
                <set variable="missing_metrics">view('missing_metrics_view',entry('report',$report)|entry('ngi',$ngi)|entry('site',$site)|entry('sf',$sf))</set>
                <elements path="group/group/group_ts">
                    <element-create>
                        $missing_metrics/root/group
                        /missing[@host=current()/../status/@host  and ( not(@metric=current()/../status/@metric))]
                    </element-create>

                </elements>
            </element>

            <!--
            Replace placeholder with the first preceding timestamp
            -->

            <element in="root">
                <elements path="group/group/group_ts">
                    <element-ignore in="missing">
                        <element-create>
                            (parent::missing/parent::group_ts/preceding-sibling::group_ts/status[@site=current()/../@site and @sf=current()/../@sf and @host=current()/../@host and @metric=current()/../@metric])[last()]
                        </element-create>
                    </element-ignore>
                </elements>
            </element>


            <!-- replace status with a value in order to use maximum function -->


            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group/group_ts/status">
                    <attribute-create out="value">$StateMap/e:entries/e:entry[@key=current()/../@status]/text()</attribute-create>
                </elements>
            </element>

            <elements path="root/group/group/group_ts">
                <attribute-create out="value">math:max(../status/@value)</attribute-create>
            </elements>

            <elements path="root/group/group/group_ts">
                <attribute-create out="timestamp">../status[1]/@timestamp</attribute-create>
                <element in="status">
                    <attribute-ignore in="timestamp"/>
                </element>
            </elements>



            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group">
                    <element in="group_ts" if="following-sibling::group_ts[1]/@timestamp">
                        <attribute-create out="endtime">parent::group_ts/following-sibling::group_ts[1]/@timestamp</attribute-create>
                        <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                        <element-ignore in="status"></element-ignore>

                    </element>
                    <element in="group_ts">
                        <attribute-create out="endtime">current()/../parent::group/parent::group/@end_time</attribute-create>

                        <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                        <element-ignore in="status"></element-ignore>

                    </element>
                </elements>
            </element>




            <!-- remove useles previous entries -->
            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@endtime,0,20)) &gt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20)) ">
                </element>
                <element-ignore in="group_ts"></element-ignore>
            </elements>

            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@timestamp,0,20)) &lt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20))">
                    <attribute in="timestamp">parent::group_ts/parent::group/parent::group/@start_time</attribute>
                </element>
            </elements>

            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <elements path="group/group">
                    <element in="group_ts" out="group_ts">
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                        <attribute in="name">../ancestor::group/@name</attribute>
                    </element>

                </elements>
            </element>
            <element in="root">
                <element in="group">
                    <attribute-create out="site">$site</attribute-create>
                    <attribute-create out="sf">$sf</attribute-create>
                    <attribute-create out="view">'metric_status'</attribute-create>
                    <attribute-create out="entity">concat('report=',$report,'&amp;ngi=',$ngi,'&amp;site=',$site,'&amp;sf=',$sf,'&amp;host')</attribute-create>
                </element>
            </element>


        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html</parameter>

            </renderer>
        </renderers>

    </view>


    <view name="metric_status" xmlns:math="http://exslt.org/math">

        <info>
            <category>Status</category>
            <description>Status for metrics for a given host</description>
        </info>

        <argument name="site"></argument>
        <argument name="sf"></argument>
        <argument name="host"></argument>

        <argument name="report">false</argument>
        <argument name="start_time_timestamp" eval="date:seconds('2014-12-30T00:00:00')"></argument>
        <argument name="end_time_timestamp" eval="date:seconds('2015-01-03T00:00:00')"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="choose($report='false',view('Site_Statuses_NGI'),choose($report='cloud',view('Site_Statuses_NGI_Cloud'),view('data_status_report',arguments())))"></parameter>
        </connector>
        <processors>

            <element in="root" >

                <element-ignore in="entry">
                    <element-ignore in="root">
                        <element-ignore in="profile">
                            <element-ignore in="group">
                                <element-ignore in="group"  >
                                    <element-ignore in="group" >
                                        <element-ignore in="group" >
                                            <element in="host" out="group"  if="@name=$host and current()/parent::group/@name=$sf" attributes="current()/parent::group/parent::group/parent::group/parent::group/parent::profile/parent::root/@*">

                                                <element in="metric" out="group">
                                                    <element-ignore in="status"  if="@status = preceding-sibling::status[1]/@status"/>
                                                    <element in="status">
                                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>

                                                    </element>
                                                </element>

                                            </element>

                                        </element-ignore>

                                    </element-ignore>
                                </element-ignore>
                            </element-ignore>
                        </element-ignore>
                    </element-ignore>
                </element-ignore>
            </element>





            <elements path="root/group/group">
                <element-ignore in="status"></element-ignore>
                <element-create>sort_by_string(../status,'@timestamp')</element-create>
            </elements>


            <elements path="root/group/group">
                <element-create-as-parent out="group_ts" group-by="@timestamp">
                    <element in="status"/>
                </element-create-as-parent>
            </elements>

            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group/group_ts/status">
                    <attribute-create out="value">$StateMap/e:entries/e:entry[@key=current()/../@status]/text()</attribute-create>
                </elements>
            </element>

            <elements path="root/group/group/group_ts">
                <attribute-create out="value">math:max(../status/@value)</attribute-create>
            </elements>

            <elements path="root/group/group/group_ts">
                <attribute-create out="timestamp">../status[1]/@timestamp</attribute-create>
                <element in="status">
                    <attribute-ignore in="timestamp"/>
                </element>
            </elements>


            <element in="root">
                <set variable="StateMap">view('StateMap')</set>
                <elements path="group/group">
                    <element in="group_ts" if="following-sibling::group_ts[1]/@timestamp">
                        <attribute-create out="endtime">parent::group_ts/following-sibling::group_ts[1]/@timestamp</attribute-create>
                        <attribute-create out="status">current()/../status/@status</attribute-create>

                    </element>
                    <element in="group_ts">
                        <attribute-create out="endtime">current()/../parent::group/parent::group/@end_time</attribute-create>
                        <attribute-create out="status">current()/../status/@status</attribute-create>
                    </element>
                </elements>
            </element>



            <element in="root">
                <set variable="StateColor">view('StateColor')</set>

                <elements path="group/group">
                    <element in="group_ts">
                        <attribute-ignore in="value"></attribute-ignore>
                        <attribute in="status" out="value"></attribute>
                        <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@status]/text()</attribute-create>
                        <attribute in="name">../ancestor::group/@name</attribute>
                        <attribute-create out="url">concat('metric_output?site=',$site,'&amp;host=',$host,'&amp;sf=',$sf,'&amp;timestamp=',../@timestamp,'&amp;metric=',../parent::group/@name)</attribute-create>

                    </element>

                </elements>
            </element>

            <element in="root">
                <element in="group">
                    <attribute-create out="site">$site</attribute-create>
                    <attribute-create out="sf">$sf</attribute-create>
                    <attribute-create out="host">$host</attribute-create>
                    <attribute-create out="view">'metric_output'</attribute-create>

                </element>
            </element>

            <!-- remove useles previous entries -->
            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@endtime,0,20)) &gt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20)) ">
                </element>
                <element-ignore in="group_ts"></element-ignore>
            </elements>

            <elements path="root/group/group">
                <element in="group_ts" if="date:seconds(substring(@timestamp,0,20)) &lt; date:seconds(substring(current()/parent::group/parent::group/@start_time,0,20))">
                    <attribute in="timestamp">parent::group_ts/parent::group/parent::group/@start_time</attribute>
                </element>
            </elements>

        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/statuses_reports.html</parameter>

            </renderer>
        </renderers>

    </view>

    <view name="metric_output">
        <argument name="site"></argument>
        <argument name="host"></argument>
        <argument name="sf"></argument>
        <argument name="metric"></argument>
        <argument name="timestamp"></argument>

        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('api.metric.output.url'),$host,'/',$sf,'/',$metric,'?exec_time=',$timestamp)"></parameter>
        </connector>

        
        <processors>
            <element in="root">
                <attribute-create out="site">$site</attribute-create>
                <attribute-create out="host">$host</attribute-create>
                <attribute-create out="sf">$sf</attribute-create>
                <attribute-create out="metric">$metric</attribute-create>
                <attribute-create out="timestamp">$timestamp</attribute-create>

                <elements-ignore path="profile/group/group/group/group/host/metric/status">
                    <element in="summary"></element>
                    <element in="message"></element>
                </elements-ignore>

            </element>


        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/output_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/output_reports.html</parameter>

            </renderer>
        </renderers>
    </view>

    <view name="site_laststatus">
        <info>
            <category>Status</category>
            <description>Last Status for a given Site</description>
        </info>

        <argument name="site">IN2P3-CC</argument>
        <argument name="ngi">NGI_FRANCE</argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="view('site_status',arguments())"></parameter>
        </connector>

        <processors>
            <element in="root" out="result">
                <attribute-create out="color">../group/group/group_ts[position()=last()]/@color</attribute-create>
                <attribute-create out="timestamp">../group/group/group_ts[position()=last()]/@endtime</attribute-create>
                <attribute-create out="value">../group/group/group_ts[position()=last()]/@value</attribute-create>
                <element-ignore></element-ignore>
            </element>
        </processors>




    </view>

    <view name="StatusTreeMap">


        <info>
            <category>API results aggregated</category>
            <description>Custom factor display</description>
        </info>

        <connector type="HTTPConnector">
            <parameter name="url" eval="property('api.custom.factors')"></parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="force-redirect">true</parameter>
        </connector>

        <processors>
            <insert match="/root/Factor" nodes="new_attribute('ngi',choose(view('goc.siteList')/results/SITE[@NAME=match()/@site]/ROC/text(),view('goc.siteList')/results/SITE[@NAME=match()/@site]/ROC/text(),'NA'))"></insert>

            <elements path="root/Factor">
                <attribute in="ngi" >view('goc.siteList')/results/SITE[@NAME=current()/../@site]/ROC/text()</attribute>
                <attribute in="site" out="id"></attribute>
                <attribute in="ngi" out="Parent"></attribute>
            </elements>


            <element in="root" out="nodeData">
                <element in="Factor" out="children">

                </element>
            </element>

            <elements path="nodeData/children">
                <attribute-create out="status">view('site_laststatus',entry('ngi',current()/../@ngi)|entry('site',current()/../@id))/result/@value</attribute-create>
                <attribute in="ngi" out="Parent"></attribute>
            </elements>

            <elements path="nodeData">
                <element-ignore in="children" if="@Parent='' or @Parent=' ' or @status=''"></element-ignore>

            </elements>


            <elements path="nodeData">
                <element-create as="first-child">view('listNgi')</element-create>
            </elements>

            <elements path="nodeData">
                <element-ignore in="e:entries">
                    <element in="e:entry" out="children">
                        <attribute-create out="id">../text()</attribute-create>
                        <attribute-create out="Parent">'EGI'</attribute-create>
                        <attribute-create out="color">0.0</attribute-create>
                        <attribute-create out="size">0</attribute-create>
                        <text-ignore></text-ignore>
                    </element>
                </element-ignore>
            </elements>




        </processors>
        <cache type="FileCache">

        <trigger type="DeltaTimeTrigger">
        <parameter name="hours">4</parameter>
        </trigger>
        <trigger type="ViewNotifiedTrigger"/>
        <trigger type="ViewCreatedTrigger"/>
        </cache>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/factors.html</parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/factors.html</parameter>

            </renderer>
            <renderer type="JSONRenderer">
                <parameter name="element_as_array">true</parameter>
            </renderer>
        </renderers>

    </view>

</config>