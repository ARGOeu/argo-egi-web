<config xmlns="http://software.in2p3.fr/lavoisier/config.xsd"
        xmlns:date="http://exslt.org/dates-and-times"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:str="http://exslt.org/strings"
        xmlns:math="http://exslt.org/math"
        xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">




    <view name="data_status_report_today">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:date-time(), 0,11),'T00:00:00'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(substring(date:date-time(), 0,20))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('Site_Statuses_NGI')"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:date-time(), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">substring(date:date-time(),0,20)</attribute-create>
                <element in="entry">
                    <text-ignore></text-ignore>
                    <elements-ignore path="root/profile/group">
                        <element in="group">
                            <elements path="group/group/host/metric">
                                <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            </elements>
                        </element>
                    </elements-ignore>
                </element>
            </elements>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">2</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="minutes">10</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>


    </view>

    <view name="data_status_report_today_cloud">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:date-time(), 0,11),'T00:00:00'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(substring(date:date-time(), 0,20))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('Site_Statuses_NGI_Cloud')"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:date-time(), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">substring(date:date-time(),0,20)</attribute-create>
                <element in="entry">
                    <text-ignore></text-ignore>
                    <elements-ignore path="root/profile/group">
                        <element in="group">
                            <elements path="group/group/host/metric">
                                <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            </elements>
                        </element>
                    </elements-ignore>
                </element>
            </elements>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">2</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">1</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>


    <view name="data_status_report_last_day">



        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_data_cached', entry('start_date', concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T00:00:00Z')))"></parameter>
        </connector>

        <processors>
            <element in="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:00Z')</attribute-create>
                <element in="entry">
                    <text-ignore></text-ignore>
                    <elements-ignore path="root/profile/group">
                        <element in="group">
                            <elements path="group/group/host/metric">
                                <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            </elements>
                        </element>
                    </elements-ignore>
                </element>
            </element>


            <element in="root">
                <element-ignore in="entry" if="not(group/group)"></element-ignore>
            </element>

        </processors>


    </view>


    <view name="data_status_report_last_day_cloud">



        <connector type="XMLConnector">
            <parameter name="content" eval="view('status_data_cached_cloud', entry('start_date', concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T00:00:00Z')))"></parameter>
        </connector>

        <processors>
            <element in="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:00Z')</attribute-create>
                <element in="entry">
                    <text-ignore></text-ignore>
                    <elements-ignore path="root/profile/group">
                        <element in="group">
                            <elements path="group/group/host/metric">
                                <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            </elements>
                        </element>
                    </elements-ignore>
                </element>
            </element>


            <element in="root">
                <element-ignore in="entry" if="not(group/group)"></element-ignore>
            </element>

        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">1</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>



    </view>

    <view name="data_status_report_lastweek">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',7,'D')), 0,11),'T00:00:00'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('data_status_report',entry('start_time_timestamp',$start_time_timestamp)|entry('end_time_timestamp',$end_time_timestamp))"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',7,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z')</attribute-create>
            </elements>
        </processors>
        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">1</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>


    <view name="data_status_report_lastweek_cloud">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',7,'D')), 0,11),'T00:00:00'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('data_status_report_cloud',entry('start_time_timestamp',$start_time_timestamp)|entry('end_time_timestamp',$end_time_timestamp))"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',7,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z')</attribute-create>
            </elements>
        </processors>
        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">1</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>

    <view name="data_status_report_lastmonth">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',30,'D')), 0,11),'T00:00:00Z'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('data_status_report',entry('start_time_timestamp',$start_time_timestamp)|entry('end_time_timestamp',$end_time_timestamp))"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',30,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z')</attribute-create>
            </elements>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">2</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>

    <view name="data_status_report_lastmonth_cloud">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',30,'D')), 0,11),'T00:00:00Z'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('data_status_report_cloud',entry('start_time_timestamp',$start_time_timestamp)|entry('end_time_timestamp',$end_time_timestamp))"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',30,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z')</attribute-create>
            </elements>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">2</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>

    <view name="data_status_report_3lastmonth">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',91,'D')), 0,11),'T00:00:00Z'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('data_status_report',entry('start_time_timestamp',$start_time_timestamp)|entry('end_time_timestamp',$end_time_timestamp))"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',91,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z')</attribute-create>
            </elements>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">3</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>

    <view name="data_status_report_3lastmonth_cloud">

        <variable name="start_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',91,'D')), 0,11),'T00:00:00Z'))"/>
        <variable name="end_time_timestamp" eval="date:seconds(concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z'))"/>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('data_status_report_cloud',entry('start_time_timestamp',$start_time_timestamp)|entry('end_time_timestamp',$end_time_timestamp))"></parameter>
        </connector>

        <processors>
            <elements path="root">
                <attribute-create out="start_time">concat(substring(date:add(date:date-time(),concat('-P',91,'D')), 0,11),'T00:00:00Z')</attribute-create>
                <attribute-create out="end_time">concat(substring(date:add(date:date-time(),concat('-P',1,'D')), 0,11),'T23:59:59Z')</attribute-create>
            </elements>
        </processors>

        <cache type="IndexedFileCache">
            <parameter name="index_depth">3</parameter>
            <trigger type="DeltaTimeTrigger">
                <parameter name="hours">3</parameter>
            </trigger>
            <trigger type="ViewNotifiedTrigger"></trigger>
        </cache>

    </view>

    <view name="dates_timeline">

        <argument name="view"></argument>


        <connector type="XMLConnector">
            <parameter name="content" eval="view($view)"></parameter>
        </connector>

        <processors>
            <element in="root">
                <element-ignore/>
            </element>
        </processors>
    </view>

    <processors name="status_algorithm">


        <!--<elements path="root/group/group">-->
            <!--<element in="status" if="date:seconds(substring(@endtime,0,20)) &gt; date:seconds(substring(../ancestor::root/@start_time,0,20))"></element>-->
        <!--</elements>-->

        <!-- create sorted by group -->

        <elements path="root">
            <element-ignore in="group"/>
            <element-create>sort_by_string(../group,'@name')</element-create>

        </elements>


        <elements path="root">
            <element-create-as-parent attributes="@name" out="group" group-by="@name">
                <element in="group"/>
            </element-create-as-parent>
        </elements>

        <elements path="root/group">
            <element-ignore in="group">
                <element in="status"></element>
            </element-ignore>
        </elements>




        <!-- create sorted of timestamps -->

        <elements path="root/group">
            <element-ignore in="status"></element-ignore>
            <element-create>sort_by_string(../status,'@timestamp')</element-create>
        </elements>


        <elements path="root/group">
            <element-create-as-parent out="group_ts" group-by="@timestamp">
                <element in="status"/>
            </element-create-as-parent>
        </elements>


        <!--
        Put placeholders where we have some holes
        -->
        <element in="root">
            <set variable="missing_metrics">view('missing_metrics_view',entry('view',$data)|entry('ngi',$ngi)|entry('site',$site))</set>
            <elements path="group/group_ts">
                <element-create>
                    $missing_metrics/root/group
                    /missing[@site=current()/../status/@site  and  ( not(@metric=current()/../status/@metric  and @host=current()/../status/@host and @sf=current()/../status/@sf))]
                </element-create>

            </elements>
        </element>

        <!--
        Replace placeholder with the first preceding timestamp
        -->

        <element in="root">
            <elements path="group/group_ts">
                <element-ignore in="missing" >
                    <element-create>
                        (parent::missing/parent::group_ts/preceding-sibling::group_ts/status[@site=current()/../@site and @host=current()/../@host and @metric=current()/../@metric])[last()]
                    </element-create>
                </element-ignore>
            </elements>
        </element>




        <!-- replace status with a value in order to use maximum function -->

        <element in="root">
            <set variable="StateMap">view('StateMap')</set>
            <elements path="group/group_ts/status">
                <attribute-create out="value">$StateMap/e:entries/e:entry[@key=current()/../@status]/text()</attribute-create>
            </elements>
        </element>

        <elements path="root/group/group_ts">
            <attribute-create out="value">math:max(../status/@value)</attribute-create>
        </elements>

        <elements path="root/group/group_ts">
            <attribute-create out="timestamp">../status[1]/@timestamp</attribute-create>
            <element in="status">
                <attribute-ignore in="timestamp"/>
            </element>
        </elements>

        <elements path="root/group/group_ts">
            <attribute in="timestamp" if="../@timestamp=''">ancestor::root/@start_time</attribute>
            <attribute-create out="previous_timestamp" if="@timestamp!=''">../@timestamp</attribute-create>

        </elements>

        <element in="root">
            <set variable="StateMap">view('StateMap')</set>
            <elements path="group">
                <element in="group_ts" if="following-sibling::group_ts[1]/@timestamp">
                    <attribute-create out="endtime">parent::group_ts/following-sibling::group_ts[1]/@timestamp</attribute-create>
                    <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                    <element-ignore in="status"></element-ignore>

                </element>
                <element in="group_ts">
                    <attribute-create out="endtime">ancestor::root/@end_time</attribute-create>

                    <attribute in="value">$StateMap/e:entries/e:entry[text()=current()/../@value]/@key</attribute>
                    <element-ignore in="status"></element-ignore>

                </element>
            </elements>
        </element>


        <!-- remove useles previous entries -->
        <elements path="root/group">
            <element in="group_ts" if="date:seconds(substring(@endtime,0,20)) &gt; date:seconds(substring(current()/parent::group/parent::root/@start_time,0,20)) ">
            </element>
            <element-ignore in="group_ts"></element-ignore>
        </elements>

        <elements path="root/group">
            <element in="group_ts" if="date:seconds(substring(@timestamp,0,20)) &lt; date:seconds(substring(current()/parent::group/parent::root/@start_time,0,20))">
                <attribute in="timestamp">parent::group_ts/parent::group/parent::root/@start_time</attribute>
                <attribute-create out="previous_timestamp">../@timestamp</attribute-create>
            </element>
        </elements>

        <!-- add color -->
        <element in="root">
            <set variable="StateColor">view('StateColor')</set>

            <elements path="group">
                <element in="group_ts" out="group_ts">
                    <attribute-create out="color">$StateColor/e:entries/e:entry[@key=current()/../@value]/text()</attribute-create>
                    <attribute in="name">../ancestor::group/@name</attribute>
                </element>

            </elements>
        </element>


    </processors>

    <view name="site_status_report" xmlns:math="http://exslt.org/math" post-processors="status_algorithm">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi">all</argument>
        <argument name="site">false</argument>
        <argument name="data"></argument>

        <variable name="start_time" eval="view('dates_timeline',entry('view',$data))/root/@start_time"></variable>
        <variable name="end_time" eval="view('dates_timeline',entry('view',$data))/root/@end_time"></variable>

        <connector type="XMLConnector">
            <parameter name="content" eval="view_path($data,concat('/root/entry/group[@name=',quot($ngi),' or group/@name=',quot($site),']'),arguments())"></parameter>
        </connector>

        <processors>

            <element in="e:entries" out="root">
                                <element-ignore in="group">
                                    <element in="group" if="@name=$site or $site='false'">
                                        <element-ignore in="group">
                                            <element-ignore in="host">

                                                <element-ignore in="metric">
                                                    <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                                                    <element in="status">
                                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>
                                                        <attribute-create out="id">concat(ancestor::metric/@name,'-',ancestor::group[@type='service_type']/@name,'-',ancestor::host/@name)</attribute-create>
                                                    </element>
                                                </element-ignore>

                                            </element-ignore>
                                        </element-ignore>
                                    </element>
                                </element-ignore>

            </element>


            <element in="root">
                <attribute-create out="start_time">$start_time</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>

                <attribute-create out="ngi" if="$ngi!='all'">$ngi</attribute-create>
                <attribute-create out="site" if=" $site != 'false' ">$site</attribute-create>
                <attribute-create out="view">'sf_status_report'</attribute-create>
                <attribute-create out="data">$data</attribute-create>
                <attribute-create out="entity">concat('&amp;ngi=',$ngi,'&amp;site')</attribute-create>

            </element>





        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html</parameter>

            </renderer>
        </renderers>
    </view>


    <view name="sitesf_status_report" xmlns:math="http://exslt.org/math" post-processors="status_algorithm">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi">all</argument>
        <argument name="site">false</argument>
        <argument name="sf">false</argument>
        <argument name="data"></argument>

        <variable name="start_time" eval="view('dates_timeline',entry('view',$data))/root/@start_time"></variable>
        <variable name="end_time" eval="view('dates_timeline',entry('view',$data))/root/@end_time"></variable>

        <connector type="XMLConnector">
            <parameter name="content" eval="view_path($data,concat('/root/entry/group[@name=',quot($ngi),' or group/@name=',quot($site),']'),arguments())"></parameter>
        </connector>

        <processors>

            <elements path="e:entries/group/group">
                <element-ignore in="group" if="@name!=$sf"></element-ignore>
            </elements>

            <element in="e:entries" out="root">
                <element-ignore in="group">
                    <element in="group" if="@name=$site or $site='false'">
                        <attribute in="name">concat(.,' - ',$sf)</attribute>
                        <element-ignore in="group">
                            <element-ignore in="host">

                                <element-ignore in="metric">
                                    <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                                    <element in="status">
                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>
                                        <attribute-create out="id">concat(ancestor::metric/@name,'-',ancestor::group[@type='service_type']/@name,'-',ancestor::host/@name)</attribute-create>
                                    </element>
                                </element-ignore>

                            </element-ignore>
                        </element-ignore>
                    </element>
                </element-ignore>

            </element>


            <element in="root">
                <attribute-create out="start_time">$start_time</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>

                <attribute-create out="ngi" if="$ngi!='all'">$ngi</attribute-create>
                <attribute-create out="site" if=" $site != 'false' ">$site</attribute-create>
                <attribute-create out="view">'host_status_report'</attribute-create>
                <attribute-create out="data">$data</attribute-create>
                <attribute-create out="entity">concat('&amp;sf=',$sf,'&amp;ngi=',$ngi,'&amp;site')</attribute-create>
                <attribute-create out="sf_report">'true'</attribute-create>
            </element>





        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html</parameter>

            </renderer>
        </renderers>
    </view>




    <view name="sf_status_report" xmlns:math="http://exslt.org/math" post-processors="status_algorithm">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi"></argument>
        <argument name="site"></argument>
        <argument name="data"></argument>

        <variable name="start_time" eval="view('dates_timeline',entry('view',$data))/root/@start_time"></variable>
        <variable name="end_time" eval="view('dates_timeline',entry('view',$data))/root/@end_time"></variable>

        <connector type="XMLConnector">
            <parameter name="content" eval="view_path($data,concat('/root/entry/group/group[@name=',quot($site),']'),arguments())"></parameter>
        </connector>

        <processors>


            <element in="e:entries" out="root" attributes="group/@*">
                     <element-ignore in="group"> <!-- site -->
                                        <element in="group"> <!-- sf -->
                                            <element-ignore in="host">
                                                <element-ignore in="metric">
                                                    <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                                                    <element in="status">
                                                        <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                                        <attribute-create out="host">ancestor::host/@name</attribute-create>
                                                        <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                                        <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>
                                                    </element>
                                                </element-ignore>
                                            </element-ignore>
                                        </element>
                                    </element-ignore>
                </element>



            <element in="root">
                <attribute-create out="ngi" if="$ngi!='all'">$ngi</attribute-create>
                <attribute-create out="site" if=" $site != 'false' ">$site</attribute-create>
                <attribute-create out="view">'host_status_report'</attribute-create>
                <attribute-create out="data">$data</attribute-create>
                <attribute-create out="entity">concat('&amp;ngi=',$ngi,'&amp;site=',$site,'&amp;sf')</attribute-create>
                <attribute-create out="start_time">$start_time</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>

            </element>

        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html</parameter>

            </renderer>
        </renderers>

    </view>


    <view name="host_status_report" xmlns:math="http://exslt.org/math" post-processors="status_algorithm">

        <info>
            <category>Status</category>
            <description>Status for sites in a given NGI</description>
        </info>

        <argument name="ngi"></argument>
        <argument name="site"></argument>
        <argument name="sf"></argument>
        <argument name="data"></argument>
        <variable name="start_time" eval="view('dates_timeline',entry('view',$data))/root/@start_time"></variable>
        <variable name="end_time" eval="view('dates_timeline',entry('view',$data))/root/@end_time"></variable>






        <connector type="XMLConnector">
            <parameter name="content" eval="view_path($data,concat('/root/entry/group/group[@name=',quot($site),']'),arguments())"></parameter>
        </connector>

        <processors>


            <element in="e:entries" out="root" attributes="group/@*">
            <element-ignore in="group"> <!-- site -->
                <element-ignore in="group"> <!-- sf -->
                    <element in="host" out="group" if="parent::group/@name=$sf">
                        <element-ignore in="metric">
                            <element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>
                            <element in="status">
                                <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                                <attribute-create out="host">ancestor::host/@name</attribute-create>
                                <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                                <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>
                            </element>
                        </element-ignore>
                    </element>
                </element-ignore>
            </element-ignore>
        </element>


            <element in="root">
                <attribute-create out="start_time">$start_time</attribute-create>
                <attribute-create out="end_time">$end_time</attribute-create>


                <attribute-create out="site">$site</attribute-create>
                    <attribute-create out="sf">$sf</attribute-create>
                <attribute-create out="data">$data</attribute-create>
                    <attribute-create out="view">'metric_status_report'</attribute-create>
                    <attribute-create out="entity">concat('ngi=',$ngi,'&amp;site=',$site,'&amp;sf=',$sf,'&amp;host')</attribute-create>

            </element>



        </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html</parameter>

            </renderer>
        </renderers>

    </view>



    <view name="metric_status_report" xmlns:math="http://exslt.org/math" post-processors="status_algorithm">

    <info>
        <category>Status</category>
        <description>Status for sites in a given NGI</description>
    </info>

    <argument name="ngi"></argument>
    <argument name="site"></argument>
    <argument name="sf"></argument>
    <argument name="host"></argument>
    <argument name="data"></argument>
        <variable name="start_time" eval="view('dates_timeline',entry('view',$data))/root/@start_time"></variable>
        <variable name="end_time" eval="view('dates_timeline',entry('view',$data))/root/@end_time"></variable>


    <connector type="XMLConnector">
        <parameter name="content" eval="view_path($data,concat('/root/entry/group/group[@name=',quot($site),']'),arguments())"></parameter>
    </connector>

    <processors>


        <element in="e:entries" out="root" attributes="group/@*">
        <element-ignore in="group"> <!-- site -->
            <element-ignore in="group"> <!-- sf -->
                <element-ignore in="host">
                    <element in="metric" out="group" if="parent::host/@name=$host and parent::host/parent::group/@name=$sf">
                        <!--<element-ignore in="status" if="@status = preceding-sibling::status[1]/@status"/>-->
                        <element in="status">
                            <attribute-create out="metric">ancestor::metric/@name</attribute-create>
                            <attribute-create out="host">ancestor::host/@name</attribute-create>
                            <attribute-create out="sf">ancestor::group[@type='service_type']/@name</attribute-create>
                            <attribute-create out="site">ancestor::group[@type='site']/@name</attribute-create>
                        </element>
                    </element>
                    </element-ignore>
                </element-ignore>

        </element-ignore>
    </element>

        <element in="root">
            <attribute-create out="start_time">$start_time</attribute-create>
            <attribute-create out="end_time">$end_time</attribute-create>

            <attribute-create out="site">$site</attribute-create>
            <attribute-create out="sf">$sf</attribute-create>
            <attribute-create out="host">$host</attribute-create>
            <attribute-create out="data">$data</attribute-create>
            <attribute-create out="url">concat('metric_output?site=',$site,'&amp;host=',$host,'&amp;sf=',$sf)</attribute-create>
        </element>





    </processors>

        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html
                </parameter>

            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/ARGO_UI/resources/html/status_reports.html</parameter>

            </renderer>
        </renderers>

    </view>


</config>