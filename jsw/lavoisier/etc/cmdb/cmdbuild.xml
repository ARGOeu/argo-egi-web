<?xml-stylesheet type="text/xsl" href="/lavoisier/lavoisier-package/src/site/resources/config.xsl"?>
<config xmlns="http://software.in2p3.fr/lavoisier/config.xsd" version="14"
        xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
    <view name="cmdbuild">
        <info>
            <description>You MUST respect this order: update(cards,relations), disable(cards,relations), orphan(relations,cards)</description>
            <category>Main</category>
            <accept>xml</accept>
        </info>
        <argument name="action" pattern="list|update|disable|orphan"/>
        <argument name="type" pattern="cards|relations"/>
        <argument name="simulate" pattern="true|false">false</argument>
        <variable name="request" eval="concat($action, '-', $type, '-request')"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="entries(choose($type='cards',
                view('schema')/schema/relations/*[not(@class=preceding::*/@class)]/@class,
                view('schema')/schema/relations/@id
            ))"/>
        </connector>
        <processors>
            <element in="e:entries" out="response">
                <element-ignore in="e:entry">
                    <element-create if="$simulate='true'">view($request, entry('class-or-domain',../text()))</element-create>
                    <element-create if="$simulate='false'"
                        >view('call-cmdbuild', entry('request',$request)|entry('class-or-domain',../text()))</element-create>
                </element-ignore>
            </element>
        </processors>
    </view>

    <!-- REQUEST VIEWS -->

    <view name="list-cards-request">
        <info>
            <description>List cards for specified class</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="new_element('cards', new_attribute('class',$class-or-domain))"/>
        </connector>
    </view>
    <view name="list-relations-request">
        <info>
            <description>List relations for specified domain</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('schema')/schema/relations[@id=$class-or-domain]"/>
        </connector>
    </view>

    <view name="update-cards-request">
        <info>
            <description>Step 1: may create cards to be used by step 2 (update-relations)</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('new-cards-with-id', arguments())"/>
        </connector>
        <processors>
            <element in="cards">
                <element in="card">
                    <element-create>new_element('Disabled', 'false')</element-create>
                </element>
            </element>
            <element in="cards" out="UpdateCardsRequest">
                <set variable="cmdbuild">view('cmdbuild-cards', arguments())</set>
                <element in="card">
                    <set variable="old">$cmdbuild/cards/card[@id = current()/@id]</set>
                    <element-ignore if="$old/*[local-name()=local-name(current())][text()=current()/text() or not(text()|current()/text())]"/>
                </element>
            </element>
            <element in="UpdateCardsRequest">
                <element-ignore in="card" if="not(*)"/>
            </element>
        </processors>
    </view>
    <view name="update-relations-request">
        <info>
            <description>Step 2: may reconnect orphan cards to prevent them from being processed by step 5 (orphan-cards)</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('new-relations-with-id', arguments())"/>
        </connector>
        <processors>
            <element in="relations" out="CreateRelationsRequest">
                <set variable="cmdbuild">view('cmdbuild-relations', arguments())</set>
                <element-ignore in="relation" if="$cmdbuild/relations/relation[@card1Id=current()/@card1Id and @card2Id=current()/@card2Id]"/>
            </element>
        </processors>
    </view>

    <view name="disable-cards-request">
        <info>
            <description>Step 3: may cause orphan relations to be processed by step 4 (orphan-relations)</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('cmdbuild-cards', arguments())"/>
        </connector>
        <processors>
            <element in="cards" out="UpdateCardsRequest">
                <set variable="new">view('new-cards-with-id', arguments())</set>
                <element-ignore in="card" if="@id = $new/cards/card/@id"/>
                <element-ignore in="card" if="Disabled = 'true'"/>
                <element in="card">
                    <element in="Disabled">
                        <text>'true'</text>
                    </element>
                    <element-ignore/>
                </element>
            </element>
        </processors>
    </view>
    <view name="disable-relations-request">
        <info>
            <description>Step 3': may cause orphan cards to be processed by step 5 (orphan-cards)</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('cmdbuild-relations', arguments())"/>
        </connector>
        <processors>
            <element in="relations" out="DeleteRelationsRequest">
                <set variable="new">view('new-relations-with-id', arguments())</set>
                <element-ignore in="relation" if="$new/relations/relation[@card1Id=current()/@card1Id and @card2Id=current()/@card2Id]"/>
            </element>
        </processors>
    </view>

    <view name="orphan-relations-request">
        <info>
            <description>Step 4: may cause orphan cards to be processed by step 5 (orphan-cards)</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('cmdbuild-relations', arguments())"/>
        </connector>
        <processors>
            <element in="relations" out="DeleteRelationsRequest">
                <set variable="cards1">view('cmdbuild-cards', entry('class-or-domain',@class1))</set>
                <set variable="cards2">view('cmdbuild-cards', entry('class-or-domain',@class2))</set>
                <element-ignore in="relation" if="not($cards1/cards/card[@id=current()/@card1Id]/Disabled='true' or $cards2/cards/card[@id=current()/@card2Id]/Disabled='true')"/>
            </element>
        </processors>
    </view>
    <view name="orphan-cards-request">
        <info>
            <description>On demand: List the orphan cards (that are not disabled)</description>
            <category>Request</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('cmdbuild-cards', arguments())"/>
        </connector>
        <processors>
            <element in="cards">
                <set variable="relations">view('cmdbuild-relations-ALL')</set>
                <element-ignore in="card" if="@id = $relations/e:entries/relations[@class1=$class-or-domain]/relation/@card1Id
                                          or  @id = $relations/e:entries/relations[@class2=$class-or-domain]/relation/@card2Id"/>
                <element-ignore in="card" if="Disabled = 'true'"/>
                <element in="card">
                    <element-ignore/>
                </element>
            </element>
        </processors>
    </view>

    <!-- INTERNAL VIEWS -->

    <view name="new-cards-with-id">
        <info>
            <description>Add CMDBuild identifier to current cards</description>
            <category>New-with-id</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view($class-or-domain)"/>
        </connector>
        <processors>
            <element in="cards">
                <set variable="cmdbuild">view('cmdbuild-cards', arguments())</set>
                <element in="card">
                    <set variable="id">$cmdbuild/cards/card[Code = current()/Code]/@id</set>
                    <attribute-create out="id" if="$id">$id</attribute-create>
                </element>
            </element>
        </processors>
    </view>
    <view name="new-relations-with-id">
        <info>
            <description>Add CMDBuild identifier to current relations</description>
            <category>New-with-id</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view($class-or-domain)"/>
        </connector>
        <processors>
            <element in="relations">
                <set variable="cards1">view('cmdbuild-cards', entry('class-or-domain',@class1))</set>
                <set variable="cards2">view('cmdbuild-cards', entry('class-or-domain',@class2))</set>
                <element in="relation">
                    <attribute in="Code1" out="card1Id">$cards1/cards/card[Code=current()]/@id</attribute>
                    <attribute in="Code2" out="card2Id">$cards2/cards/card[Code=current()]/@id</attribute>
                </element>
            </element>
        </processors>
    </view>

    <view name="cmdbuild-relations-ALL">
        <info>
            <description>List all the relations between all cards</description>
            <category>CMDBuild</category>
        </info>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('schema')/schema/relations/@id"/>
        </connector>
        <processors>
            <element in="e:entries">
                <element-ignore in="e:entry">
                    <element-create>view('cmdbuild-relations', entry('class-or-domain',../text()))</element-create>
                </element-ignore>
            </element>
        </processors>
    </view>
    <view name="cmdbuild-cards">
        <info>
            <description>List cards for specified class</description>
            <category>CMDBuild</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="CMDBuildConnector">
            <parameter name="url" eval="concat('http://',property('cmdbuild.server'),':8080/cmdbuild/services/soap/Private')"/>
            <parameter name="username" eval="property('cmdbuild.username')"/>
            <parameter name="password" eval="property('cmdbuild.password')"/>
            <parameter name="request" eval="new_element('cards', new_attribute('class',$class-or-domain))"/>
        </connector>
        <pre-renderers>
            <row foreach="/cards/card[not(Disabled='true')]">
                <column link="/lavoisier/dependencies?class={../@class}&amp;card={@id}">Description</column>
            </row>
        </pre-renderers>
    </view>
    <view name="cmdbuild-relations">
        <info>
            <description>List relations for specified domain</description>
            <category>CMDBuild</category>
        </info>
        <argument name="class-or-domain"/>
        <connector type="CMDBuildConnector">
            <parameter name="url" eval="concat('http://',property('cmdbuild.server'),':8080/cmdbuild/services/soap/Private')"/>
            <parameter name="username" eval="property('cmdbuild.username')"/>
            <parameter name="password" eval="property('cmdbuild.password')"/>
            <parameter name="request" eval="view('schema')/schema/relations[@id=$class-or-domain]"/>
        </connector>
    </view>
    <view name="call-cmdbuild">
        <info>
            <description>Call CMDBuild SOAP operation with specified request</description>
            <category>CMDBuild</category>
        </info>
        <argument name="request"/>
        <argument name="class-or-domain"/>
        <connector type="CMDBuildConnector">
            <parameter name="url" eval="concat('http://',property('cmdbuild.server'),':8080/cmdbuild/services/soap/Private')"/>
            <parameter name="username" eval="property('cmdbuild.username')"/>
            <parameter name="password" eval="property('cmdbuild.password')"/>
            <parameter name="request" eval="view($request, entry('class-or-domain',$class-or-domain))"/>
        </connector>
    </view>

    <view name="schema">
        <info>
            <description>The CMDBuild schema</description>
        </info>
        <argument name="all">false</argument>
        <connector type="FileConnector">
            <parameter name="path">cmdb/cmdbuild-schema.xml</parameter>
        </connector>
        <processors>
            <element in="schema">
                <element-ignore in="relations" if="@manual='true' and $all!='true'"/>
            </element>
        </processors>
    </view>
</config>