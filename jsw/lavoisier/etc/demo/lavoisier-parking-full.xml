<config xmlns="http://software.in2p3.fr/lavoisier/config.xsd" version="14"
        xmlns:kml="http://www.opengis.net/kml/2.2"
        xmlns:dst="http://TrackService.TrackRoad.com/">
    <view name="parking_lyon">
        <info>
            <category>demo</category>
        </info>
        <connector type="HTTPConnector">
            <parameter name="url">https://download.data.grandlyon.com/kml/grandlyon/?request=layer&amp;typename=pvo_patrimoine_voirie.pvoparking</parameter>
        </connector>
        <serializer type="ZipSerializer"/>
        <processors>
            <processor type="InsertProcessor" match="/kml:kml/kml:Document/kml:Placemark/kml:Point/kml:coordinates[text()]">
                <parameter name="nodes" eval="new_attribute('lng', substring-before(text(),',')) |
new_attribute('lat', substring-after(text(),','))"/>
            </processor>
        </processors>
        <cache type="FileCache">
            <trigger type="ViewCreatedTrigger" ignore-during="PT1H"/>
            <trigger type="ViewNotifiedTrigger"/>
        </cache>
    </view>

    <view-template name="distance" stylesheet="template/WSDLTemplate.xsl">
        <info>
            <category>demo</category>
        </info>
        <parameter name="wsdl">http://trackservice.trackroad.com/TrackService.asmx?WSDL</parameter>
        <parameter name="operation">CalculateDistance</parameter>
        <parameter name="SOAPHeader" eval="string(new_element('dst:SessionIDHeader',new_element('dst:SessionID',property('trackroad.session'))))"/>
        <fallback eval="new_element('ERROR', arguments())">
            <exception type="java.net.SocketTimeoutException"/>
            <exception type="java.net.ConnectException" predicate-on-message="contains(.,'Connection refused')"/>
        </fallback>
    </view-template>

    <view name="parking_distance_0">
        <info>
            <category>demo</category>
        </info>
        <argument name="lat"/><argument name="lng"/>
        <argument name="distance">400</argument>
        <variable name="angle" eval="$distance * 360 div 40075000"/>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('parking_lyon')"/>
        </connector>
        <processors>
            <processor type="SelectProcessor" match="/kml:kml/kml:Document/kml:Placemark/kml:Point/kml:coordinates[
$lat - $angle &lt; @lat and @lat &lt; $lat + $angle and
$lng - $angle &lt; @lng and @lng &lt; $lng + $angle ]"/>
            <processor type="InsertProcessor" match="/*/kml:coordinates">
                <parameter name="nodes" eval="new_attribute('Distance', view('distance', entry('DistanceUnit_11','Kilometer') |
entry('Latitude_1118',$lat) | entry('Longitude_1118',$lng) |
entry('Latitude_1128',@lat) | entry('Longitude_1128',@lng)
)/dst:CalculateDistanceResponse/dst:CalculateDistanceResult/dst:Distance/text())"/>
            </processor>
        </processors>
    </view>
    <view name="parking_distance">
        <info>
            <category>demo</category>
        </info>
        <argument name="lat"/><argument name="lng"/>
        <argument name="distance"/>
        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view('parking_distance_0', arguments())"/>
            <parameter name="key" eval="concat($lat,'/',$lng,'/',$distance)"/>
            <parameter name="size">100</parameter>
        </connector>
    </view>

    <authenticators name="ip">
        <authenticator type="IPAddressAuthenticator"/>
    </authenticators>
    <view name="depart" authenticators="ip">
        <info>
            <category>demo</category>
        </info>
        <argument name="ip" pattern="([0-9]{1,3}\.){3}[0-9]{1,3}" eval="user()" path-format="name_value"/>
        <connector type="HTTPConnector">
            <parameter name="url" eval="concat('http://freegeoip.net/xml/', $ip)"/>
        </connector>
    </view>

    <view name="parking" authenticators="ip">
        <info>
            <category>demo</category>
        </info>
        <argument name="destination" path-format="none"/>
        <argument name="distance" path-format="none">400</argument>
        <connector type="HTTPConnector">
            <parameter name="url" eval="concat('http://maps.googleapis.com/maps/api/geocode/xml?sensor=false&amp;address=', translate($destination,' ','+'))"/>
        </connector>
        <validator type="PathValidator">
            <parameter name="path">/GeocodeResponse/result</parameter>
            <parameter name="message" eval="concat('Unknown location: ', $destination)"/>
        </validator>
        <processors>
            <processor type="InsertProcessor" match="/GeocodeResponse">
                <parameter name="nodes" eval="view('depart', entry('ip',user()))/Response/*[starts-with(name(),'L')]"/>
                <parameter name="destination_as">first-child</parameter>
            </processor>
            <processor type="ElementToAttributeProcessor" match="/GeocodeResponse/result/geometry/location"/>
            <processor type="InsertProcessor" match="/GeocodeResponse/result/geometry/location">
                <parameter name="nodes" eval="view('parking_distance', arguments() | entries(@lat|@lng))/*/kml:coordinates"/>
                <parameter name="destination_as">following-sibling</parameter>
            </processor>
        </processors>
        <pre-renderers>
            <title>'Car Park Coordinates'</title>
            <field>/GeocodeResponse/result/geometry/location/@lat</field>
            <field>/GeocodeResponse/result/geometry/location/@lng</field>
            <row foreach="/GeocodeResponse/result/geometry/kml:coordinates">
                <column label="Latitude">(round(@lat*100000) div 100000)</column>
                <column label="Longitude">(round(@lng*100000) div 100000)</column>
                <column unit="km">@Distance</column>
            </row>
        </pre-renderers>
        <renderers>
            <renderer type="JSONRenderer">
                <parameter name="text_as_pair">false</parameter>
            </renderer>
            <renderer type="CsvRenderer">
                <parameter name="separator">;</parameter>
            </renderer>
            <renderer type="DefaultRenderer">
                <parameter name="template">html/parking.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">html/parking.html</parameter>
            </renderer>
            <renderer type="ChartRenderer">
                <parameter name="axis">polar</parameter>
            </renderer>
        </renderers>
    </view>
</config>